{"ast":null,"code":"import profileReducer from \"./profile-reducer\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\nconst SEND_MESSAGE = 'SEND_MESSAGE';\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hi, how are you?',\n        likesCount: 12\n      }, {\n        id: 2,\n        message: 'It\\'s my first post',\n        likesCount: 11\n      }],\n      newPostText: 'it'\n    },\n    dialogsPage: {\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'How are you?'\n      }, {\n        id: 3,\n        message: 'Yo'\n      }],\n      dialogs: [{\n        id: 1,\n        name: 'Vladislav'\n      }, {\n        id: 2,\n        name: 'Andrey'\n      }, {\n        id: 3,\n        name: 'Svetlana'\n      }, {\n        id: 4,\n        name: 'Ekaterina'\n      }, {\n        id: 5,\n        name: 'Mihail'\n      }],\n      newMessageBody: \"\"\n    },\n    sidebar: {}\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  _callSubscriber() {\n    console.log('State changed');\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    this._state.profilePage = profileReducer;\n\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        likesCount: 0\n      };\n\n      this._state.profilePage.posts.push(newPost);\n\n      this._state.profilePage.newPostText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n      this._state.dialogsPage.newMessageBody = action.body;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === SEND_MESSAGE) {\n      let body = this._state.dialogsPage.newMessageBody;\n      this._state.dialogsPage.newMessageBody = '';\n\n      this._state.dialogsPage.messages.push({\n        id: 6,\n        message: body\n      });\n\n      this._callSubscriber(this._state);\n    }\n  }\n\n};\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const sendMessageCreator = () => ({\n  type: SEND_MESSAGE\n});\nexport const updateNewMessageBodyCreator = body => ({\n  type: UPDATE_NEW_MESSAGE_BODY,\n  body: body\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/rolan/OneDrive/Рабочий стол/lesson/my-app/src/redux/state.js"],"names":["profileReducer","ADD_POST","UPDATE_NEW_POST_TEXT","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","store","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","messages","dialogs","name","newMessageBody","sidebar","getState","_callSubscriber","console","log","subscribe","observer","dispatch","action","type","newPost","push","newText","body","addPostActionCreator","updateNewPostTextActionCreator","text","sendMessageCreator","updateNewMessageBodyCreator"],"mappings":"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","sourcesContent":["import profileReducer from \"./profile-reducer\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT';\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet store = {\r\n    _state: {\r\n\r\n        profilePage: {\r\n            posts: [\r\n                {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n                {id: 2, message: 'It\\'s my first post', likesCount: 11}\r\n            ],\r\n            newPostText: 'it'\r\n        },\r\n        dialogsPage: {\r\n            messages: [\r\n                {id: 1, message: 'Hi'},\r\n                {id: 2, message: 'How are you?'},\r\n                {id: 3, message: 'Yo'}\r\n            ],\r\n            dialogs: [\r\n                {id: 1, name: 'Vladislav'},\r\n                {id: 2, name: 'Andrey'},\r\n                {id: 3, name: 'Svetlana'},\r\n                {id: 4, name: 'Ekaterina'},\r\n                {id: 5, name: 'Mihail'}\r\n            ],\r\n            newMessageBody: \"\"\r\n        },\r\n        sidebar: {}\r\n\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    _callSubscriber() {\r\n        console.log('State changed')\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer;\r\n    },\r\n\r\n\r\n    dispatch(action) {\r\n\r\n        this._state.profilePage = profileReducer\r\n\r\n\r\n        if (action.type === ADD_POST) {\r\n            let newPost = {\r\n                id: 5,\r\n                message: this._state.profilePage.newPostText,\r\n                likesCount: 0\r\n            };\r\n            this._state.profilePage.posts.push(newPost);\r\n            this._state.profilePage.newPostText = '';\r\n            this._callSubscriber(this._state);\r\n        } else if (action.type === UPDATE_NEW_POST_TEXT){\r\n            this._state.profilePage.newPostText = action.newText;\r\n            this._callSubscriber(this._state);\r\n        } else if (action.type === UPDATE_NEW_MESSAGE_BODY){\r\n            this._state.dialogsPage.newMessageBody = action.body;\r\n            this._callSubscriber(this._state);\r\n        } else if (action.type === SEND_MESSAGE){\r\n            let body = this._state.dialogsPage.newMessageBody;\r\n            this._state.dialogsPage.newMessageBody = '';\r\n            this._state.dialogsPage.messages.push({id: 6, message: body})\r\n            this._callSubscriber(this._state);\r\n        }\r\n        }\r\n\r\n\r\n}\r\nexport const addPostActionCreator = () => ({ type: ADD_POST })\r\nexport const updateNewPostTextActionCreator = (text) => ({ type: UPDATE_NEW_POST_TEXT , newText: text })\r\n\r\nexport const sendMessageCreator = () => ({ type: SEND_MESSAGE })\r\nexport const updateNewMessageBodyCreator = (body) => ({ type: UPDATE_NEW_MESSAGE_BODY , body: body })\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}